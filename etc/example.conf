; This is an example config with default values
; Attention: do _not_ use whitespace between keys and values

; verbosity level. The more logging the greater load
; 1: normal
; 3: info
; 5: debug
verbosity=1

; piler daemon will use this user (and its group)
; it it was started by root
username=piler

; by default (unless a specific retention rule applies),
; preserve an email for this many days. The purge utility
; won't harm the message until its retention days are gone.
; The default is 7 years + 2 days (=7*365+2=2557 days)
default_retention_days=2557

; this is a 16 character long vector
iv=****************

; number of worker processes, ie. the number of simultaneous smtp connections to piler.
number_of_worker_processes=10

; number of processed emails per each piler process
max_requests_per_child=1000

; SMTP HELO identification string
hostid=mailarchiver.localhost

; write pid file
pidfile=/var/run/piler/piler.pid

; piler will listen here
listen_addr=0.0.0.0
listen_port=25

clamd_socket=/tmp/clamd

session_timeout=420

; the 2nd parameter of the listen() system call. Please note that this is set
; when piler starts up and you should restart piler if you change this variable.
; Please also note that the meaning of this variable depends on your Unix implementation
backlog=20

workdir=/var/piler/tmp

;
; starttls stuff
;

; whether to enable (1) or disable (0) starttls support
tls_enable=0

; PEM file containing both the certificate and the private key.
; Make sure to create this file (and secure it with chmod 600 /usr/local/etc/piler.pem)
; before turning on starttls support!
pemfile=

; cipher list to use, see 'man SSL_CTX_set_cipher_list' for more details
cipher_list=HIGH:MEDIUM


; piler's own header to indicate previously archived messages
piler_header_field=X-piler: piler already archived this email


; whether to archive an email not having a Message-ID header line (1)
; or not (0).
; If enabled then piler will assign piler_id as the message-id
; to messages without message-id.
archive_emails_not_having_message_id=0

; minimum word length in mail body to index
min_word_len=1

; comma separated list of your domains. piler uses this information to determine
; the direction of the given email
mydomains=


; if piler detects this line in the mail header, then it will assume
; the message is a spam. You should include your own antispam solution's
; specific line.
;
; If you use SpamAssassin you may use
;
; spam_header_line=X-Spam-Status: Yes
;
; OR
;
; spam_header_line=X-Spam-Level: ********
;
; The default value is empty.
spam_header_line=

;
; memcached stuff
;

; memcached server to use. Currently piler supports only 1 memcached server
memcached_servers=127.0.0.1

; ttl (in secs) of a stored object
; 0 means records don't expire
memcached_ttl=86400

; whether to update counters to memcached (1) or to the database (0)
update_counters_to_memcached=0

; interval to sync memcached data (eg. counters) to database
; this setting is only effective if you have update_counters_to_memcached=1
;
; hint: if you are using a mysql replicated environment and you do _not_ want
; piler to write to the replicated database (because you do sync it some other
; way to the master database or you are not interested in keeping the counters
; persistantly at all), then specify a big number here, that fits to the 
; "long int" size, eg. 2147483647
memcached_to_db_interval=900


;
; mysql stuff
;

;mysqlhost=127.0.0.1
;mysqlport=3306
mysqlsocket=/tmp/mysql.sock
mysqluser=piler
mysqlpwd=verystrongpassword
mysqldb=piler
mysql_connect_timeout=2

